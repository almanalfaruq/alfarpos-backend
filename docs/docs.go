// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Almantera Tiantana Al Faruqi",
            "url": "https://twitter.com/almanalfaruq",
            "email": "alman.alfaruq@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/money": {
            "post": {
                "description": "New money is used for creating a new money transaction (in/out)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "money"
                ],
                "summary": "New money",
                "parameters": [
                    {
                        "description": "Money transaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.Money"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return money transaction data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/transaction.Money"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/money/filters": {
            "post": {
                "description": "Get money transaction with filter status and date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "money"
                ],
                "summary": "Get money transaction with filter",
                "parameters": [
                    {
                        "description": "Money transaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.GetMoneyWithFilterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return monies transaction data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/transaction.Money"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "New order is used for creating a new order by the order details per product.\nOrder only need to specify the primitive data like the product_id, user_id, etc. without having to specify its object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "New order",
                "parameters": [
                    {
                        "description": "Order with order detail",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return order data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/order.Order"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/print/order": {
            "post": {
                "description": "Print order bill by its invoice",
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "print"
                ],
                "summary": "Print order bill by its invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order invoice",
                        "name": "invoice",
                        "in": "path"
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "description": "Get Products based on query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Products based on query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unit or category",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "If this empty, it will fetch all products",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return array of product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/product.Product"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/products/code/{code}": {
            "get": {
                "description": "Get Product based on code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Product based on code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code of the product",
                        "name": "coded",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/product.Product"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/products/id/{id}": {
            "get": {
                "description": "Get Product based on id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Product based on id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of the product",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/product.Product"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/products/ids/{ids}": {
            "get": {
                "description": "Get Multiple Product based on id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Multiple Product based on ids",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ids of the product",
                        "name": "ids",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/product.Product"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/products/upload_excel": {
            "post": {
                "description": "Upload products from excel file (*.xlsx). First row should be the header with these column in order:\nCode (Barcode), Product Name, Sell Price, Quantity, Category Name, Buy Price, and Unit Name (pcs, bottle, etc.)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Upload products from excel file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the sheet",
                        "name": "sheetName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return array of product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/product.Product"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/products/upsert_excel": {
            "put": {
                "description": "Update or insert products from excel file (*.xlsx). First row should be the header with these column in order:\nCode (Barcode), Product Name, Sell Price, Quantity, Category Name, Buy Price, and Unit Name (pcs, bottle, etc.)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Update or insert products from excel file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the sheet",
                        "name": "sheetName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return array of product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/product.Product"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Endpoint for getting the token for the logged in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "These field must be present: username, password, fullname, address, phone, and role_id (1 = Admin; 2 = Manager; 3 = Cashier)",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a jwt token to be used for other requests",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register new user (TODO: API caller should be a Manager or an Admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "These field must be present: username, password, fullname, address, phone, and role_id (1 = Admin; 2 = Manager; 3 = Cashier)",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the new registered user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/update": {
            "put": {
                "description": "Endpoint for updating the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "These field must be present: username, password",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the updated user data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Return error with message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Category"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Pengging, Banyudono, Boyolali"
                },
                "code": {
                    "type": "string",
                    "example": "code-1"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Customer"
                },
                "phone": {
                    "type": "string",
                    "example": "081234567890"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Payment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Cash"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Unit": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "KRT40"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Unit"
                },
                "total_pcs": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "order.Order": {
            "type": "object",
            "properties": {
                "amount_paid": {
                    "type": "integer",
                    "example": 150000
                },
                "created_at": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/model.Customer"
                },
                "customer_id": {
                    "type": "integer",
                    "example": 1
                },
                "deleted_at": {
                    "type": "string"
                },
                "discount": {
                    "type": "number",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "invoice": {
                    "type": "string",
                    "example": "5-9-2020-000001"
                },
                "note": {
                    "type": "string",
                    "example": "This was a pending transaction for specific customer"
                },
                "order_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.OrderDetail"
                    }
                },
                "payment": {
                    "$ref": "#/definitions/model.Payment"
                },
                "payment_id": {
                    "type": "integer",
                    "example": 1
                },
                "ppn": {
                    "type": "integer",
                    "example": 13000
                },
                "status": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer",
                    "example": 130000
                },
                "total_change": {
                    "type": "integer",
                    "example": 20000
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "order.OrderDetail": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "order_id": {
                    "type": "integer",
                    "example": 1
                },
                "product": {
                    "$ref": "#/definitions/product.Product"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                },
                "sell_price": {
                    "type": "integer",
                    "example": 15000
                },
                "sub_total": {
                    "type": "integer",
                    "example": 5000
                },
                "updated_at": {
                    "type": "string"
                },
                "use_special_price": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "product.Product": {
            "type": "object",
            "properties": {
                "buy_price": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "category": {
                    "$ref": "#/definitions/model.Category"
                },
                "category_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "discount": {
                    "$ref": "#/definitions/sql.NullFloat64"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "http://localhost/image/image.jpg"
                },
                "is_open_price": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "product name"
                },
                "product_prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.ProductPrice"
                    }
                },
                "quantity": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "related_products": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sell_price": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "unit": {
                    "$ref": "#/definitions/model.Unit"
                },
                "unit_id": {
                    "type": "integer",
                    "example": 2
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "product.ProductPrice": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "price_per_packet": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "price_per_unit": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity_multiplier": {
                    "type": "integer",
                    "example": 3
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ResponseStruct": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success getting all products"
                }
            }
        },
        "sql.NullFloat64": {
            "type": "object",
            "properties": {
                "float64": {
                    "type": "number"
                },
                "valid": {
                    "description": "Valid is true if Float64 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullInt64": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer"
                },
                "valid": {
                    "description": "Valid is true if Int64 is not NULL",
                    "type": "boolean"
                }
            }
        },
        "sql.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "transaction.GetMoneyWithFilterReq": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "transaction.Money": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 1000000
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "note": {
                    "type": "string",
                    "example": "Payment for unilever"
                },
                "type": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Ketaon, Banyudono, Boyolali"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string",
                    "example": "Cashier Primary"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "example": "0276 3283720"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "cashier"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/",
	Schemes:     []string{},
	Title:       "AlfarPOS BackEnd",
	Description: "This is a backend server for alfarpos.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
